{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/Alert/Alert.module.css","redux/listAction.js","components/Contacts/Contacts.js","components/Phonebook/Phonebook.js","components/Filter/Filter.js","components/Alert/Alert.js","App.js","reportWebVitals.js","redux/deleteListReduser.js","redux/store.js","index.js","components/Contacts/Contacts.module.css","components/Phonebook/Phonebook.module.css"],"names":["module","exports","deleteList","createAction","addList","text","number","payload","contact","id","uuidv4","name","filterList","mapDispatchToProps","connect","state","contacts","filter","items","filterToLowerCase","toLowerCase","includes","className","s","div","TransitionGroup","component","ul","map","e","CSSTransition","classNames","timeout","li","span","span2","button","type","onClick","Phonebook","phonebookValue","setState","target","value","numberValue","btnClick","preventDefault","props","this","form","onSubmit","label","input","placeholder","onChange","max","Component","changeFilter","container","Alert","massage","h1","App","text2","message","message2","onAddList","setTimeout","prevProps","prevState","localStorage","setItem","JSON","stringify","notif","in","appear","unmountOnExit","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","parse","getItem","createReducer","_","combineReducers","store","configureStore","reducer","deleteListReduser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8463ea9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__30_sm\",\"appear\":\"App_appear__PwfWn\",\"appearActive\":\"App_appearActive__1R_m3\",\"notif\":\"App_notif__2YtsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__2jbRE\",\"label\":\"Filter_label__O7jqJ\",\"input\":\"Filter_input__32r4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Alert_section__P3kej\",\"heading\":\"Alert_heading__1GHVZ\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n// import { DELTELIST, ADDLIST, FILTERLIST } from './type';\n\nconst deleteList = createAction('deleteList');\n// const deleteList = id => {\n//   return {\n//     type: DELTELIST,\n//     payload: {\n//       id: id,\n//     },\n//   };\n// };\nconst addList = createAction('addList', (text, number) => ({\n  payload: {\n    contact: { id: uuidv4(), name: text, number },\n  },\n}));\n\n// const addList = (text, number) => {\n//   return {\n//     type: ADDLIST,\n//     payload: {\n//       contact: { id: uuidv4(), name: text, number },\n//     },\n//   };\n// };\n\nconst filterList = createAction('filterList');\n\n// const filterList = filter => {\n//   return {\n//     type: FILTERLIST,\n//     payload: {\n//       filter,\n//     },\n//   };\n// };\nexport { deleteList, addList, filterList };\n","\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Contacts.module.css\";\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { deleteList } from '../../redux/listAction';\r\n\r\nconst Contacts = ({ contacts, deleteList }) => {\r\n  return (\r\n    <div className={s.div}>\r\n      <TransitionGroup component=\"ul\" className={s.ul}>\r\n        {contacts.map(e => (\r\n          <CSSTransition key={e.id} classNames={s} timeout={250}>\r\n            <li className={s.li} key={e.id} id={e.id}>\r\n              <span>\r\n                <span className={s.span}>{e.name}</span>\r\n                <span className={s.span2}>{e.number}</span>\r\n              </span>\r\n              <button\r\n                className={s.button}\r\n                type=\"submit\"\r\n                onClick={() => deleteList(e.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { filter, items } = state.contacts;\r\n  const filterToLowerCase = filter.toLowerCase();\r\n  const filterContact = items.filter(({ name }) =>\r\n    name.toLowerCase().includes(filterToLowerCase),\r\n  );\r\n  return { contacts: filterContact };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteList: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Phonebook.module.css';\r\n\r\nexport default class Phonebook extends Component {\r\n  static propTypes = {\r\n    phonebookValue: PropTypes.func,\r\n  };\r\n  state = {\r\n    text: '',\r\n    number: '',\r\n  };\r\n\r\n  phonebookValue = e => this.setState({ text: e.target.value });\r\n  numberValue = e => this.setState({ number: e.target.value });\r\n\r\n  btnClick = e => {\r\n    e.preventDefault();\r\n    this.props.phonebookValue(this.state.text, this.state.number);\r\n    this.setState({ text: '', number: '' });\r\n  };\r\n  render() {\r\n    const { text, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.btnClick}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            value={text}\r\n            placeholder=\"Enter name\"\r\n            onChange={this.phonebookValue}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"number\"\r\n            max=\"9999999999\"\r\n            value={number}\r\n            placeholder=\"Enter phone number\"\r\n            onChange={this.numberValue}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Filter.module.css\";\r\nimport { connect } from 'react-redux';\r\nimport { filterList } from '../../redux/listAction';\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <div className={s.container}>\r\n      <label>\r\n        Find contacts by name <br />\r\n        <input\r\n          value={filter}\r\n          className={s.input}\r\n          type=\"text\"\r\n          placeholder=\"Enter filter\"\r\n          onChange={e => changeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeFilter: filterList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\r\n\r\n\r\nimport s from \"./Alert.module.css\";\r\n\r\nexport default function Alert({ massage }) {\r\n  return (\r\n    <div className={s.div}>\r\n      <h3 className={s.h1}>{massage}</h3>\r\n    </div>\r\n  );\r\n}","import { Component } from 'react';\nimport s from './App.module.css';\nimport './App2.css';\nimport Contacts from './components/Contacts/Contacts';\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Filter from './components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\nimport Alert from './components/Alert/Alert';\nimport { connect } from 'react-redux';\nimport { addList } from './redux/listAction';\n\nclass App extends Component {\n  state = {\n    text: '',\n    text2: '',\n    message: false,\n    message2: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { text, message } = this.state;\n    if (\n      !message &&\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase()) &&\n      text !== ''\n    ) {\n      this.setState({ message: true, text2: 'Contact already exists!' });\n      setTimeout(() => {\n        this.setState({ message: false, text: '', text2: '' });\n      }, 3000);\n      return;\n    }\n\n    if (this.props.contacts === prevProps.contacts) {\n      return;\n    }\n    localStorage.setItem('contacts', JSON.stringify(this.props.contacts));\n  }\n\n  phonebookValue = (text, number) => {\n    if (\n      text !== '' &&\n      number !== '' &&\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase()) === false\n    ) {\n      this.props.onAddList(text, number);\n    } else {\n      this.setState({ message2: true, text2: 'Fill in all the fields' });\n      setTimeout(() => {\n        this.setState({ message2: false, text2: '' });\n      }, 3000);\n    }\n    if (\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase())\n    ) {\n      this.setState({ text });\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className={s.App}>\n        <div className={s.notif}>\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames={s}\n            timeout={500}\n            unmountOnExit\n          >\n            <h1>Phonebook</h1>\n          </CSSTransition>\n          <div className=\"alert\">\n            <CSSTransition\n              in={this.state.message || this.state.message2}\n              classNames=\"alert\"\n              timeout={250}\n              unmountOnExit\n            >\n              <Alert massage={this.state.text2} />\n            </CSSTransition>\n          </div>\n        </div>\n        <Phonebook phonebookValue={this.phonebookValue} />\n        <CSSTransition\n          in={this.props.contacts.length > 1}\n          classNames=\"filter\"\n          timeout={250}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        <Contacts />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { contacts: state.contacts.items };\n};\n\nconst mapDispatchToProps = {\n  onAddList: addList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n// import { DELTELIST, ADDLIST, FILTERLIST } from './type';\nimport { deleteList, addList, filterList } from './listAction';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst initialState = {\n  contacts: {\n    items: JSON.parse(localStorage.getItem('contacts'))\n      ? JSON.parse(localStorage.getItem('contacts'))\n      : [],\n    filter: '',\n  },\n};\n\nconst items = createReducer(initialState.contacts.items, {\n  [deleteList]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [addList]: (state, { payload }) => [...state, payload.contact],\n});\n\n// const items = (state = initialState.contacts.items, { type, payload }) => {\n//   switch (type) {\n//     case deleteList.type:\n//       return state.filter(contact => contact.id !== payload);\n//     case addList.type:\n//       return [...state, payload.contact];\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer(initialState.contacts.filter, {\n  [filterList]: (_, { payload }) => payload,\n});\n\n// const filter = (state = initialState.contacts.filter, { type, payload }) => {\n//   switch (type) {\n//     case filterList.type:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\nexport default combineReducers({\n  items,\n  filter,\n});\n","import deleteListReduser from './deleteListReduser';\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst store = configureStore({\n  reducer: { contacts: deleteListReduser },\n});\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from '../src/redux/store';\n\n\n\nReactDOM.render(\n \n  <Provider store={store}>\n    <App />\n  </Provider>,\n  \n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Contacts_form__2tfAw\",\"label\":\"Contacts_label__3He0Q\",\"input\":\"Contacts_input__iUIjK\",\"btn\":\"Contacts_btn__rDtF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__2PXmm\",\"item\":\"Phonebook_item__oCnwR\",\"close\":\"Phonebook_close__3zYs2\"};"],"sourceRoot":""}